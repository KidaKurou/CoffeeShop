<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CoffeeShop Cart</title>
  <link rel="stylesheet" href="../assets/styles.css">
  <script src="https://kit.fontawesome.com/d54d69edca.js" crossorigin="anonymous"></script>
</head>

<body>
  <%- include('header'); %>

    <section class="bg-white antialiased dark:bg-gray-900 py-16 min-h-svh" style="min-height: calc(100svh - 220px);">
      <div class="mx-auto max-w-screen-xl px-4 2xl:px-0">
        <h2 class="text-xl font-semibold text-gray-900 dark:text-white sm:text-2xl">ВАША КОРЗИНА</h2>

        <div class="mt-6 sm:mt-8 md:gap-6 lg:flex lg:items-start xl:gap-8">
          <div class="mx-auto w-full flex-none lg:max-w-2xl xl:max-w-4xl">
            <div class="cart-container space-y-6">

              <% if (cart && cart.items.length> 0) { %>
                <% cart.items.forEach(function(item) { %>
                  <%- include('cart_block', { item: item }); %>
                    <% }); %>

                      <% } else { %>
                        <p>Ваша корзина пуста.</p>
                        <% } %>

            </div>
          </div>

          <div class="mx-auto mt-6 max-w-4xl flex-1 space-y-6 lg:mt-0 lg:w-full">
            <div
              class="space-y-4 rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-gray-700 dark:bg-gray-800 sm:p-6">
              <p class="text-xl font-semibold text-gray-900 dark:text-white">Сумма заказа</p>

              <div class="space-y-4">
                <div class="space-y-2">
                  <dl class="flex items-center justify-between gap-4">
                    <dt class="text-base font-normal text-gray-500 dark:text-gray-400">Конечная цена</dt>
                    <dd class="total-price text-base font-medium text-gray-900 dark:text-white">$0.00</dd>
                  </dl>

                  <dl class="flex items-center justify-between gap-4">
                    <dt class="text-base font-normal text-gray-500 dark:text-gray-400">Скидка</dt>
                    <dd class="discount-item text-base font-medium text-green-600">-$0.00</dd>
                  </dl>

                  <dl class="flex items-center justify-between gap-4">
                    <dt class="text-base font-normal text-gray-500 dark:text-gray-400">Доставка</dt>
                    <dd class="delivery-item text-base font-medium text-gray-900 dark:text-white">$0.00</dd>
                  </dl>
                </div>

                <dl class="flex items-center justify-between gap-4 border-t border-gray-200 pt-2 dark:border-gray-700">
                  <dt class="text-base font-bold text-gray-900 dark:text-white">К оплате</dt>
                  <dd class="final-price text-base font-bold text-gray-900 dark:text-white">$0.00</dd>
                </dl>
              </div>

              <a href="#"
                class="flex w-full items-center justify-center rounded-lg bg-primary-700 px-5 py-2.5 text-sm font-medium text-white hover:bg-primary-800 focus:outline-none focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Оформить
                заказ</a>

              <div class="flex items-center justify-center gap-2">
                <span class="text-sm font-normal text-gray-500 dark:text-gray-400"> или </span>
                <a href="/" title=""
                  class="inline-flex items-center gap-2 text-sm font-medium text-primary-700 underline hover:no-underline dark:text-primary-500">
                  Продолжить покупки
                  <svg class="h-5 w-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 24 24">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M19 12H5m14 0-4 4m4-4-4-4" />
                  </svg>
                </a>
              </div>
            </div>

            <div
              class="space-y-4 rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-gray-700 dark:bg-gray-800 sm:p-6 hidden">
              <form class="space-y-4">
                <div>
                  <label for="voucher" class="mb-2 block text-sm font-medium text-gray-900 dark:text-white"> Do you have
                    a voucher or gift card? </label>
                  <input type="text" id="voucher"
                    class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-primary-500 focus:ring-primary-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder:text-gray-400 dark:focus:border-primary-500 dark:focus:ring-primary-500"
                    placeholder="" required />
                </div>
                <button type="submit"
                  class="flex w-full items-center justify-center rounded-lg bg-primary-700 px-5 py-2.5 text-sm font-medium text-white hover:bg-primary-800 focus:outline-none focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Apply
                  Code</button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </section>

    <%- include('footer'); %>

      <script src="../assets/js/hover_profile.js"></script>
      <script src="../assets/js/favotire_btn.js"></script>
      <script>
        // Функция для расчета итоговой суммы заказа
        function calculateFinalPrice() {
          const cartItems = document.querySelectorAll('.cart-item');
          let finalPrice = 0;
          

          cartItems.forEach(item => {
            const priceElement = item.querySelector('.item-price');
            const price = parseFloat(priceElement.textContent.replace('$', ''));
            finalPrice += price;
          });

          return finalPrice;
        }

        // Функция для обновления итоговой суммы заказа на странице
        function updateTotal() {
          const totalElement = document.querySelector('.total-price');
          const finalPrice = calculateFinalPrice();
          totalElement.textContent = `$${finalPrice.toFixed(2)}`;

          const discount = document.querySelector('.discount-item').textContent.replace('$', '');
          const delivery = document.querySelector('.delivery-item').textContent.replace('$', '');
          const total_price = document.querySelector('.total-price').textContent.replace('$', '');

          let price = (finalPrice - (-discount) - delivery) < 0 ? 0 : (finalPrice - (-discount) - delivery);
          document.querySelector('.final-price').textContent = `$${(price).toFixed(2)}`;
        }

        updateTotal();


        document.addEventListener('DOMContentLoaded', () => {
          const cartContainer = document.querySelector('.cart-container');

          // Обработчик изменений для количества, типа помола и веса
          cartContainer.addEventListener('change', (event) => {
            if (event.target.matches('.quantity-input, .grindType-selector, .weight-selector')) {
              updateCartItem(event.target);
            }
          });

          // Обработчик кликов для кнопок увеличения и уменьшения количества
          cartContainer.addEventListener('click', (event) => {
            if (event.target.matches('.quantity-decrease, .quantity-increase')) {
              console.log("Click on quantity button");
              adjustQuantity(event.target);
            }
            // Обработчик кликов для кнопки удаления товара из корзины
            if (event.target.matches('.remove-cart-item')) {
              updateTotal();
              removeCartItem(event.target);
            }
            updateTotal();
          });
        });

        function adjustQuantity(button) {
          const input = button.closest('.flex').querySelector('input[type="text"]');
          let quantity = parseInt(input.value);
          if (button.matches('.quantity-decrease') && quantity > 1) {
            input.value = quantity - 1;
          } else if (button.matches('.quantity-increase')) {
            input.value = quantity + 1;
          }
          updateCartItem(input);
        }

        function updateCartItem(input) {
          const cartItem = input.closest('.cart-item');
          const itemId = cartItem.dataset.itemId;
          const quantity = parseInt(cartItem.querySelector('.quantity-input').value);
          const weight = parseInt(cartItem.querySelector('.weight-selector').value);
          const grindType = cartItem.querySelector('.grindType-selector').value;
          const priceElement = cartItem.querySelector(`#price-${itemId}`);
          const basePrice = parseInt(cartItem.dataset.price); // Извлекаем цену из атрибута data-price

          // Расчет цены в зависимости от веса и количества
          const currentPrice = (basePrice * weight / 250) * quantity;
          console.log("Current price: " + currentPrice);

          priceElement.textContent = `$${currentPrice.toFixed(2)}`;

          // Отправка обновленной информации на сервер
          sendUpdateRequest(itemId, quantity, grindType, weight, currentPrice);
        }

        function sendUpdateRequest(itemId, quantity, grindType, weight, currentPrice) {
          fetch('/update-cart-item', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ itemId, quantity, grindType, weight, currentPrice })
          })
            .then(response => response.json())
            .then(data => {
              if (!data.success) {
                alert('Произошла ошибка при обновлении элемента корзины.');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('Произошла ошибка при обновлении элемента корзины.');
            });
        }

        function removeCartItem(button) {
          const cartItem = button.closest('.cart-item');
          const itemId = cartItem.dataset.itemId;

          fetch('/remove-cart-item', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ itemId })
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                cartItem.remove(); // Удаление элемента из DOM
              } else {
                alert('Произошла ошибка при удалении товара из корзины.');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('Произошла ошибка при удалении товара из корзины.');
            });
        }

      </script>
</body>

</html>